// Code generated by "stringer -type=ObservableTopic"; DO NOT EDIT.

package topics

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NewEVMBlock-0]
	_ = x[BorStateSync-1]
	_ = x[BlockInterval-2]
	_ = x[CheckpointSignatures-3]
	_ = x[ValidatorWallet-4]
	_ = x[HeimdallBlockInterval-5]
	_ = x[NewHeimdallBlock-6]
	_ = x[Milestone-7]
	_ = x[Reorg-8]
	_ = x[SensorBlocks-9]
	_ = x[SensorBlockEvents-10]
	_ = x[BorMissedBlockProposal-11]
	_ = x[HeimdallMissedBlockProposal-12]
	_ = x[Checkpoint-13]
	_ = x[MissedCheckpointProposal-14]
	_ = x[TransactionPool-15]
	_ = x[StolenBlock-16]
	_ = x[HashDivergence-17]
	_ = x[System-18]
	_ = x[RefreshStateTime-19]
	_ = x[ZkEVMBatches-20]
	_ = x[ExitRoots-21]
	_ = x[BridgeEvent-22]
	_ = x[ClaimEvent-23]
	_ = x[DepositCounts-24]
	_ = x[BridgeEventTimes-25]
	_ = x[ClaimEventTimes-26]
	_ = x[RollupManager-27]
	_ = x[Span-28]
	_ = x[TimeToMine-29]
	_ = x[AccountBalances-30]
	_ = x[TrustedBatch-31]
	_ = x[ExchangeRate-32]
	_ = x[TimeToFinalized-33]
	_ = x[FinalizedHeight-34]
}

const _ObservableTopic_name = "NewEVMBlockBorStateSyncBlockIntervalCheckpointSignaturesValidatorWalletHeimdallBlockIntervalNewHeimdallBlockMilestoneReorgSensorBlocksSensorBlockEventsBorMissedBlockProposalHeimdallMissedBlockProposalCheckpointMissedCheckpointProposalTransactionPoolStolenBlockHashDivergenceSystemRefreshStateTimeZkEVMBatchesExitRootsBridgeEventClaimEventDepositCountsBridgeEventTimesClaimEventTimesRollupManagerSpanTimeToMineAccountBalancesTrustedBatchExchangeRateTimeToFinalizedFinalizedHeight"

var _ObservableTopic_index = [...]uint16{0, 11, 23, 36, 56, 71, 92, 108, 117, 122, 134, 151, 173, 200, 210, 234, 249, 260, 274, 280, 296, 308, 317, 328, 338, 351, 367, 382, 395, 399, 409, 424, 436, 448, 463, 478}

func (i ObservableTopic) String() string {
	if i < 0 || i >= ObservableTopic(len(_ObservableTopic_index)-1) {
		return "ObservableTopic(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ObservableTopic_name[_ObservableTopic_index[i]:_ObservableTopic_index[i+1]]
}

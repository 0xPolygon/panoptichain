// Code generated by "stringer -type=ObservableTopic"; DO NOT EDIT.

package topics

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AccountBalances-0]
	_ = x[AggchainEvent-1]
	_ = x[BlockInterval-2]
	_ = x[BorMissedBlockProposal-3]
	_ = x[BorStateSync-4]
	_ = x[BridgeEvent-5]
	_ = x[BridgeEventTimes-6]
	_ = x[Checkpoint-7]
	_ = x[CheckpointSignatures-8]
	_ = x[ClaimEvent-9]
	_ = x[ClaimEventTimes-10]
	_ = x[DepositCounts-11]
	_ = x[ExchangeRate-12]
	_ = x[ExitRoots-13]
	_ = x[FinalizedHeight-14]
	_ = x[Grafana-15]
	_ = x[HashDivergence-16]
	_ = x[HeimdallBlockInterval-17]
	_ = x[HeimdallMissedBlockProposal-18]
	_ = x[Milestone-19]
	_ = x[MissedCheckpointProposal-20]
	_ = x[NewEVMBlock-21]
	_ = x[NewHeimdallBlock-22]
	_ = x[ProofRequest-23]
	_ = x[RefreshStateTime-24]
	_ = x[Reorg-25]
	_ = x[RollupManager-26]
	_ = x[SensorBlockEvents-27]
	_ = x[SensorBlocks-28]
	_ = x[Span-29]
	_ = x[StolenBlock-30]
	_ = x[System-31]
	_ = x[TimeToFinalized-32]
	_ = x[TimeToMine-33]
	_ = x[TransactionPool-34]
	_ = x[TrustedBatch-35]
	_ = x[ValidatorWallet-36]
	_ = x[ZkEVMBatches-37]
}

const _ObservableTopic_name = "AccountBalancesAggchainEventBlockIntervalBorMissedBlockProposalBorStateSyncBridgeEventBridgeEventTimesCheckpointCheckpointSignaturesClaimEventClaimEventTimesDepositCountsExchangeRateExitRootsFinalizedHeightGrafanaHashDivergenceHeimdallBlockIntervalHeimdallMissedBlockProposalMilestoneMissedCheckpointProposalNewEVMBlockNewHeimdallBlockProofRequestRefreshStateTimeReorgRollupManagerSensorBlockEventsSensorBlocksSpanStolenBlockSystemTimeToFinalizedTimeToMineTransactionPoolTrustedBatchValidatorWalletZkEVMBatches"

var _ObservableTopic_index = [...]uint16{0, 15, 28, 41, 63, 75, 86, 102, 112, 132, 142, 157, 170, 182, 191, 206, 213, 227, 248, 275, 284, 308, 319, 335, 347, 363, 368, 381, 398, 410, 414, 425, 431, 446, 456, 471, 483, 498, 510}

func (i ObservableTopic) String() string {
	if i < 0 || i >= ObservableTopic(len(_ObservableTopic_index)-1) {
		return "ObservableTopic(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ObservableTopic_name[_ObservableTopic_index[i]:_ObservableTopic_index[i+1]]
}
